{
  "$id": "form.ref.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "properties": {
    "componentType": {
      "const": "form"
    },
    "id": {
      "type": "string"
    },
    "title": {
      "type": "string"
    },
    "icon": {
      "type": "string"
    },
    "guards": {
      "type": "string",
      "enum": ["isAuthenticated", "isAuthorized"]
    },
    "businessRules": {
      "$ref": "business-rules.ref.json"
    },
    "elements": {
      "$ref": "form-one-of.ref.json"
    },
    "userStory": {
      "type": "string"
    },
    "contracts": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "endpoint": {
            "type": "string"
          },
          "actions": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["create", "get", "getById", "update", "delete", "clone"]
            }
          },
          "request": {
            "type": "object",
            "properties": {
              "entity": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "fields": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "dataType": {
                      "$ref": "types-datatype.ref.json"
                    },
                    "isRequired": {
                      "type": "boolean"
                    },
                    "requiredOneOf": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "isHidden": {
                      "type": "boolean",
                      "description": "If true, the attribute will not be exposed in the API."
                    },
                    "foreignKey": {
                      "type": "object",
                      "properties": {
                        "entity": {
                          "type": "string"
                        },
                        "connectionAttribute": {
                          "type": "string"
                        },
                        "relationship": {
                          "type": "string",
                          "enum": ["one-to-one", "one-to-many", "many-to-many"]
                        },
                        "fields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "dataType": {
                                "$ref": "types-datatype.ref.json"
                              }
                            },
                            "required": ["name", "dataType"]
                          }
                        },
                        "isHidden": {
                          "type": "boolean",
                          "description": "If true, the connection attribute will not be exposed in the API."
                        }
                      },
                      "required": [
                        "entity",
                        "connectionAttribute",
                        "relationship"
                      ]
                    },
                    "isPrimaryKey": {
                      "type": "boolean"
                    },
                    "minSize": {
                      "type": "number"
                    },
                    "maxSize": {
                      "type": "number"
                    },
                    "enum": {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          }
                        ]
                      }
                    },
                    "isUnique": {
                      "type": "boolean"
                    },
                    "uniqueComposedFields": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "actionsExceptions": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "create",
                          "get",
                          "getById",
                          "update",
                          "delete",
                          "clone"
                        ]
                      }
                    }
                  },
                  "required": ["name", "dataType"]
                }
              },
              "relatedEntity": {
                "type": "object",
                "properties": {
                  "entity": {
                    "type": "string",
                    "description": "An attribute called 'relatedEntity' will be created in the main entity to refer to an entity that will be related to the main one."
                  },
                  "connectionAttribute": {
                    "type": "string",
                    "description": "An attribute called 'relatedEntityId' will be created in the main entity to set the value of the id over 'relatedEntity' to make the connection."
                  },
                  "fieldsFromEntity": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "fields": {
                          "$ref": "form.ref.json"
                        },
                        "contractId": {
                          "type": "string"
                        }
                      }
                    },
                    "required": ["fields", "contractId"]
                  }
                },
                "required": [
                  "entity",
                  "connectionAttribute",
                  "fieldsFromEntity"
                ]
              },
              "uniqueConstraints": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "fields": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "required": ["entity", "fields"]
          },
          "conditions": {
            "$ref": "condition.ref.json"
          },
          "businessRules": {
            "$ref": "business-rules.ref.json"
          },
          "userStory": {
            "type": "string"
          }
        },
        "required": ["id", "endpoint", "actions"]
      }
    },
    "kanban": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": ["toDo", "inProgress", "done"]
        },
        "assignesIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "validatorsIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dueDate": {
          "type": "string",
          "format": "date-time"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "priority": {
          "type": "string",
          "enum": ["low", "medium", "high", "urgent"]
        },
        "storyPoints": {
          "type": "number",
          "minimum": 0
        }
      },
      "required": ["status"]
    }
  },
  "required": ["componentType", "id", "title", "elements", "contracts"]
}
