{
  "$id": "list.ref.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "properties": {
    "componentType": {
      "const": "list"
    },
    "id": {
      "type": "string",
      "description": "Named according to component file name (<id>.<componentType>.ts)"
    },
    "title": {
      "type": "string"
    },
    "guards": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "dataSource": {
      "$ref": "form-common-api-request.ref.json"
    },
    "userStory": {
      "type": "string"
    },
    "businessRules": {
      "$ref": "business-rules.ref.json"
    },
    "listItems": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "property": {
            "type": "string",
            "description": "Property name in the response object. e.g.: 'email'"
          },
          "label": {
            "type": "string",
            "description": "Label to property. e.g.: 'E-mail'"
          },
          "type": {
            "type": "string",
            "enum": [
              "title",
              "subtitle",
              "description",
              "video",
              "image",
              "images",
              "icon"
            ]
          },
          "dataType": {
            "type": "string",
            "$ref": "types-datatype.ref.json"
          },
          "isHtml": {
            "type": "boolean"
          },
          "isLink": {
            "type": "boolean"
          },
          "isTimestamp": {
            "type": "boolean"
          },
          "callToAction": {
            "type": "object",
            "properties": {
              "link": {
                "type": "string",
                "description": "e.g.: '/user'"
              },
              "usePropertyAsQuery": {
                "type": "boolean",
                "description": "if true then '/user/<email>'"
              }
            },
            "required": ["link"]
          },
          "conditions": {
            "$ref": "condition.ref.json"
          },
          "businessRules": {
            "$ref": "business-rules.ref.json"
          },
          "todo": {
            "type": "string"
          }
        }
      }
    },
    "cardAsALink": {
      "type": "object",
      "properties": {
        "link": {
          "type": "string",
          "description": "e.g.: '/user'"
        },
        "propertiesAsQueryParam": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "if, for example, ['_id', 'email'], then '/user?_id=value&email=value'"
        },
        "propertiesAsPathParam": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "if, for example, ['_id', 'email'], then '/user/<_id>/<email>'"
        }
      },
      "required": ["link"]
    },
    "callsToActionMenu": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "icon": {
            "type": "string",
            "description": "Material icons e.g: 'pencil'"
          },
          "label": {
            "type": "string",
            "description": "e.g: 'Editar'"
          },
          "action": {
            "type": "object",
            "properties": {
              "link": {
                "type": "object",
                "properties": {
                  "endpoint": {
                    "type": "string",
                    "description": "e.g.: '/user'"
                  },
                  "propertiesAsQueryParam": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "if, for example, ['_id', 'email'], then '/user?_id=value&email=value'"
                  },
                  "propertiesAsPathParam": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "if, for example, ['_id', 'email'], then '/user/<_id>/<email>'"
                  }
                },
                "required": ["endpoint"]
              },
              "request": {
                "type": "object",
                "properties": {
                  "endpoint": {
                    "type": "string",
                    "description": "e.g.: '/user'"
                  },
                  "propertiesAsQueryParam": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "if, for example, ['_id', 'email'], then '/user?_id=value&email=value'"
                  },
                  "propertiesAsPathParam": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "if, for example, ['_id', 'email'], then '/user/<_id>/<email>'"
                  },
                  "verb": {
                    "type": "string",
                    "enum": ["get", "post", "put", "softDelete"]
                  },
                  "dialog": {
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": ["title", "message"]
                  }
                },
                "required": ["endpoint", "verb"]
              }
            },
            "required": ["link"]
          }
        },
        "required": ["icon", "label", "action"]
      }
    },
    "listActions": {
      "$ref": "form-one-of.ref.json"
    },
    "listFilters": {
      "$ref": "form-one-of.ref.json"
    },
    "contracts": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "endpoint": {
            "type": "string"
          },
          "actions": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "create",
                "get",
                "getById",
                "update",
                "softDelete",
                "hardDelete",
                "clone",
                "sendEmail"
              ]
            }
          },
          "request": {
            "type": "object",
            "properties": {
              "entity": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "fields": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "dataType": {
                      "$ref": "types-datatype.ref.json"
                    },
                    "isRequired": {
                      "type": "boolean"
                    },
                    "requiredOneOf": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "isHidden": {
                      "type": "boolean",
                      "description": "If true, the attribute will not be exposed in the API."
                    },
                    "foreignKey": {
                      "type": "object",
                      "properties": {
                        "entity": {
                          "type": "string"
                        },
                        "connectionAttribute": {
                          "type": "string"
                        },
                        "relationship": {
                          "type": "string",
                          "enum": ["one-to-one", "one-to-many", "many-to-many"]
                        },
                        "fields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "dataType": {
                                "$ref": "types-datatype.ref.json"
                              }
                            },
                            "required": ["name", "dataType"]
                          }
                        },
                        "isHidden": {
                          "type": "boolean",
                          "description": "If true, the connection attribute will not be exposed in the API."
                        }
                      },
                      "required": [
                        "entity",
                        "connectionAttribute",
                        "relationship"
                      ]
                    },
                    "isPrimaryKey": {
                      "type": "boolean"
                    },
                    "minSize": {
                      "type": "number"
                    },
                    "maxSize": {
                      "type": "number"
                    },
                    "enum": {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          }
                        ]
                      }
                    },
                    "isUnique": {
                      "type": "boolean"
                    },
                    "uniqueComposedFields": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "actionsExceptions": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "create",
                          "get",
                          "getById",
                          "update",
                          "softDelete",
                          "hardDelete",
                          "clone",
                          "sendEmail"
                        ]
                      }
                    }
                  },
                  "required": ["name", "dataType"]
                }
              },
              "relatedEntity": {
                "type": "object",
                "properties": {
                  "entity": {
                    "type": "string",
                    "description": "An attribute called 'relatedEntity' will be created in the main entity to refer to an entity that will be related to the main one."
                  },
                  "connectionAttribute": {
                    "type": "string",
                    "description": "An attribute called 'relatedEntityId' will be created in the main entity to set the value of the id over 'relatedEntity' to make the connection."
                  },
                  "fieldsFromEntity": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "fields": {
                          "$ref": "form.ref.json"
                        },
                        "contractId": {
                          "type": "string"
                        }
                      },
                      "required": ["fields", "contractId"]
                    }
                  }
                },
                "required": [
                  "entity",
                  "connectionAttribute",
                  "fieldsFromEntity"
                ]
              },
              "uniqueConstraints": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "fields": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "required": ["entity", "fields"]
          },
          "conditions": {
            "$ref": "condition.ref.json"
          },
          "businessRules": {
            "$ref": "business-rules.ref.json"
          },
          "userStory": {
            "type": "string"
          }
        },
        "required": ["id", "endpoint", "actions"]
      }
    }
  },
  "required": ["componentType", "id", "title", "dataSource", "contracts"]
}
